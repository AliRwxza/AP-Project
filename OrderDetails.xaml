<Window x:Class="WpfApp3.OrderDetails"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        mc:Ignorable="d"
        Title="Order Details" Height="450" Width="800">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border1" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border1" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border1" Color="#FF569DE5"/>
        <Style x:Key="TextBoxError" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="#DB005B" BorderThickness="1.5" CornerRadius="10" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="SearchButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="15" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="LeftArrowButtonTemplate" TargetType="Button">
            <Grid>
                <TextBlock Text="&#x2190;" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                           />
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Grid.Column="0">
            <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#001C30" Offset="0"/>
                    <GradientStop Color="#DAFFFB" Offset="1"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
            <TextBlock Foreground="#64CCC5" FontSize="45">Order</TextBlock>
            <TextBlock Foreground="#176B87" FontSize="45">Details</TextBlock>
        </StackPanel>
        <StackPanel Name="FirstPage" Grid.Column="1" Visibility="Visible" Background="#ECF8F9">
            <Label FontSize="25" Margin="60 100 0 10">Order ID</Label>
            <TextBox Style="{DynamicResource TextBox}" Name="OrderIdField" Width="230" Height="30" Margin="60 0 0 20" HorizontalAlignment="Left" TextChanged="OrderIdField_TextChanged"/>
            <Button Name="SearchButton" Style="{DynamicResource SearchButton}" Background="#8696FE" Width="120" Height="60" FontSize="23" Click="SearchButton_Click">Search</Button>
        </StackPanel>
        <Button Name="BackButton" Template="{StaticResource LeftArrowButtonTemplate}" Visibility="Visible" Width="30" Foreground="White"
                Height="20" Margin="5" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Click="BackButton_Click"/>
        <StackPanel Name="SecondPage" Grid.Column="1" Visibility="Collapsed" Background="#ECF8F9">
            <TextBlock Name="DeliveryStatus" FontSize="20" Margin="5 15 0 0" Text="Delivery Status"/>
            <Menu Width="125" Margin="5 0" HorizontalAlignment="Left">
                <MenuItem Name="MainMenu" FontSize="15" Background="White" Width="125" >
                    <MenuItem Name="Submitted" Header="Submitted" IsCheckable="True" IsChecked="False" Checked="SubmittedOption_Checked" Unchecked="SubmittedOption_Checked"/>
                    <MenuItem Name="ReadyToSend" Header="Ready to Send" IsCheckable="True" IsChecked="False" Checked="ReadyToSendOption_Checked" Unchecked="ReadyToSendOption_Checked"/>
                    <MenuItem Name="OnTheWay" Header="On the Way" IsCheckable="True" IsChecked="False" Checked="OnTheWayOption_Checked" Unchecked="OnTheWayOption_Checked"/>
                    <MenuItem Name="Delivered" Header="Delivered" IsCheckable="True" IsChecked="False" Checked="DeliveredOption_Checked" Unchecked="DeliveredOption_Checked"/>
                </MenuItem>
            </Menu>
            <Separator Width="300" HorizontalAlignment="Left" Margin="10 10 0 0"/>
            <Label FontSize="18">Sender Address</Label>
            <TextBlock Name="SenderAddressField" Margin="5 0" FontSize="15" Text="Address is shown here"/>
            <Label FontSize="18">Receiver Address</Label>
            <TextBlock Name="ReceiverAddressField" Margin="5 0" FontSize="15" Text="Address is shown here"/>
            <Label FontSize="18">Package Type</Label>
            <TextBlock Name="PackageTypeField" FontSize="15" Margin="5 0" Text="Package type is shown here"/>
            <TextBlock Name="ContainsValuableField" FontSize="18" Margin="5 10" Text="Does[n't] contain valuable"/>
            <TextBlock Name="WeightField" FontSize="18" Margin="5 0" Text="Weight: "/>
            <TextBlock Name="PostTypeField" FontSize="18" Margin="5 10" Text="Post Type"/>
            <TextBlock Name="PhoneNumberField" FontSize="18" Margin="5 0" Text="Phone Number [if added]"/>
            <TextBlock Margin="5 5">
                <Hyperlink FontSize="15" Click="CustomerOpinion_Click">Customer Opinion</Hyperlink>
            </TextBlock>
        </StackPanel>
        <StackPanel Name="CustomerOpinionPage" Grid.Column="1" Background="#ECF8F9" Visibility="Collapsed">
            <Button Name="CustomerOpinionPageBackButton" Template="{StaticResource LeftArrowButtonTemplate}" Visibility="Visible" Foreground="Black" Width="30"
                Height="20" Margin="5" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Click="CustomerOpinionPageBackButton_Click"/>
            <Label FontSize="17" Margin="10 30 0 0">Customer Opinion</Label>
            <TextBlock Name="CustomerOpinionField" Margin="15 0 40 0" TextWrapping="Wrap" Text="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam, architecto
modi! Facilis, cumque. Ullam architecto magni repudiandae, temporibus modi sequi
natus a tempore quidem labore, eveniet quae blanditiis laboriosam quo ratione et
impedit dolorem corrupti. Quam aperiam non possimus animi quia? Esse vitae amet
molestiae perspiciatis repudiandae ex natus neque!"/>
        </StackPanel>
    </Grid>
</Window>
